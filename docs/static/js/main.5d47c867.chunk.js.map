{"version":3,"sources":["Col.js","Wall.js","Board.js","App.js","reportWebVitals.js","index.js"],"names":["Col","i","j","useState","selected","setSelected","content","setContent","players","setPlayers","className","data-selected","onClick","window","choice","player","reverse","Wall","isVericalWall","data-i","data-j","renderRow","matrixRow","map","_","console","log","isHorizontalWall","isWall","renderCol","Board","size","Array","fill","colors","App","sort","Math","random","background","setSize","style","backgroundColor","type","min","value","max","step","onChange","evt","Number","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAwBeA,MAtBf,YAAuB,EAARC,EAAQ,EAALC,EAAM,IAAD,EACWC,qBADX,mBACdC,EADc,KACJC,EADI,OAESF,qBAFT,mBAEdG,EAFc,KAELC,EAFK,OAGSJ,mBAAS,CAAC,eAAM,iBAHzB,mBAGdK,EAHc,KAGLC,EAHK,KAarB,OACE,qBACEC,UAAU,MACVC,gBAAeP,EACfQ,QAZY,WACd,IAAGR,EAAH,CACAS,OAAOC,QAAU,EACjB,IAAMC,EAASP,EAAQK,OAAOC,OAAS,GACvCP,EAAWQ,GACXN,EAAWD,EAAQQ,WACnBX,GAAaD,KAGb,SAIAE,KCJWW,MAdf,YAAyB,IAAThB,EAAQ,EAARA,EAAGC,EAAK,EAALA,EAAK,EACUC,oBAAS,GADnB,mBACfC,EADe,KACLC,EADK,KAEhBa,EAAgBhB,EAAI,GAAK,EAC/B,OACE,qBACEQ,UAAS,eAAWQ,EAAiB,WAAe,cACpDC,SAAQlB,EACRmB,SAAQlB,EACRU,QAAS,kBAAMP,GAAaD,IAC5BO,gBAAeP,KCgBfiB,EAAY,SAACpB,EAAGqB,GACpB,OAAO,qBAAKZ,UAAU,MAAf,SAAsBY,EAAUC,KAAI,SAACC,EAAGtB,GAAJ,OAzB3B,SAACD,EAAGC,GACpBuB,QAAQC,IAAIzB,EAAGC,EAAGD,EAAIC,GACtB,IAAMyB,EAAmB1B,EAAI,GAAK,EAC5BiB,EAAgBhB,EAAI,GAAK,EACzB0B,EAASD,GAAoBT,EAGnC,OAAS,GAALjB,GAAe,GAALC,EAAe,KAFdyB,GAAoBT,EAM/B,qBACER,UAAU,OACVS,SAAQlB,EACRmB,SAAQlB,IAIV0B,EACK,cAAC,EAAD,CAAM3B,EAAGA,EAAGC,EAAGA,IAEjB,cAAC,EAAD,CAAKD,EAAGA,EAAGC,EAAGA,IAIgC2B,CAAU5B,EAAGC,SAYrD4B,MATf,YAA0B,IAATC,EAAQ,EAARA,KACTT,EAAY,IAAIU,MAAa,EAAPD,GAAUE,KAAK,GAC3C,OACE,qBAAKvB,UAAU,QAAf,SACGY,EAAUC,KAAI,SAACC,EAAGvB,GAAJ,OAAUoB,EAAUpB,EAAGqB,S,MC9B5CT,OAAOC,OAAS,EAChB,IAAMoB,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,UACA,WAgBaC,MAbf,WACED,EAAOE,MAAK,WAAY,MAAO,GAAMC,KAAKC,YAC1C,IAAMC,EAAaL,EAAO,GAFb,EAGW/B,mBAAS,GAHpB,mBAGN4B,EAHM,KAGAS,EAHA,KAKb,OACE,sBAAK9B,UAAU,MAAM+B,MAAO,CAACC,gBAAiBH,GAA9C,UACE,uBAAO7B,UAAU,OAAOiC,KAAK,QAAQC,IAAK,EAAGC,MAAOd,EAAMe,IAAK,EAAGC,KAAM,EAAGC,SAH1D,SAAAC,GAAG,OAAIT,EAAQU,OAAOD,EAAIE,OAAON,WAIlD,cAAC,EAAD,CAAOd,KAAMA,QCZJqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5d47c867.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nfunction Col({ i, j }) {\n  const [selected, setSelected] = useState();\n  const [content, setContent] = useState();\n  const [players, setPlayers] = useState(['ðŸ’©', 'ðŸ”¥']);\n\n  const onClick = () => {\n    if(selected) return;\n    window.choice += 1;\n    const player = players[window.choice % 2];\n    setContent(player);\n    setPlayers(players.reverse())\n    setSelected(!selected);\n  };\n  return (\n    <div\n      className=\"Col\"\n      data-selected={selected}\n      onClick={onClick}\n  >{content}</div>\n  );\n}\n\nexport default Col;\n","import { useState } from \"react\";\n\nfunction Wall({ i, j }) {\n  const [selected, setSelected] = useState(false);\n  const isVericalWall = j % 2===0;\n  return (\n    <div\n      className={`Wall ${(isVericalWall && \"Vertical\") || \"Horizontal\"}`}\n      data-i={i}\n      data-j={j}\n      onClick={() => setSelected(!selected)}\n      data-selected={selected}\n    />\n  );\n}\n\nexport default Wall;\n","import Col from './Col';\nimport Wall from './Wall';\n\nconst renderCol = (i, j) => {\n  console.log(i, j, i + j);\n  const isHorizontalWall = i % 2===0;\n  const isVericalWall = j % 2===0;\n  const isWall = isHorizontalWall || isVericalWall;\n  const isKnob = isHorizontalWall && isVericalWall;\n\n  if (i===0 || j===0) return null;\n\n  if (isKnob)\n    return (\n      <div\n        className=\"Knob\"\n        data-i={i}\n        data-j={j}\n      ></div>\n    );\n\n  if (isWall)\n    return <Wall i={i} j={j} />;\n\n  return <Col i={i} j={j} />;\n};\n\nconst renderRow = (i, matrixRow) => {\n  return <div className=\"Row\">{matrixRow.map((_, j) => renderCol(i, j))}</div>;\n};\n\nfunction Board({ size }) {\n  const matrixRow = new Array(size * 2).fill(0);\n  return (\n    <div className=\"Board\">\n      {matrixRow.map((_, i) => renderRow(i, matrixRow))}\n    </div>\n  );\n}\n\nexport default Board;\n","import { useState } from 'react';\nimport Board from './Board';\nimport './App.css';\n\n\nwindow.choice = 0;\nconst colors = [\n  '#534B62',\n  '#74A4BC',\n  '#FED766',\n  '#9C89B8',\n  '#66666E',\n  '#415D43',\n  '#758173',\n];\n\nfunction App() {\n  colors.sort(function() {return 0.5 - Math.random()})\n  const background = colors[0];\n  const [size, setSize] = useState(3);\n  const onSizeChange = evt => setSize(Number(evt.target.value));\n  return (\n    <div className=\"App\" style={{backgroundColor: background}}>\n      <input className=\"Size\" type=\"range\" min={3} value={size} max={8} step={1} onChange={onSizeChange}></input>\n      <Board size={size} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}